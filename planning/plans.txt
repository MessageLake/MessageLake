Next:
Db Connection and functions async/await

Write tests for server!

Use relevance matrix locate related messages given terms
  Nail down expectations with Travis.
    It must be: ask ML for related messages given terms
    Db won't be handling "findMessageByTags" in the end?
      Do I retrieve my message objects from Travis? Or...
        ML model has only the semantic info it needs about the message and can give me the ID of the relevant ones... which I can use to retrieve them from the database
        ML model doing other fancy stuff like relevancy of tags is nice. But the core feature (related messages) will be tough enough.

1. Figure out your use-case flows
2. Make the model methods more intelligent (findOrCreate...)
3. Introduce a controller layer if deemed wise by (1)

Do I want to return a message with all responses?
Body:
  {
    "type": "Success",
    "message": "Succesfully saved author to db",
    "payload": {
      "author": "Friedrich Schiller"
    }
  }


Later:
Author names are tags
  "Private" tag means only tagged author(s) can see it
save/load feeds
  feeds table
Tags carry more weight, but all message text is searchable
  Tags and terms are different because the text is searchable


Implemented:
relevancy parameter in feed search (frontend)
